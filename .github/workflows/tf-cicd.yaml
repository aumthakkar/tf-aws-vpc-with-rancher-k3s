name: Terraform pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  
  workflow_dispatch:
    inputs:
      action:
        description: "Choose Terraform action"
        required: true
        default: "destroy"
        type: choice
        options:
          - destroy

env:
  TF_VERSION: "1.13.3"
  TF_TOKEN_app_terraform_io: ${{ secrets.TF_API_TOKEN }}

  TF_VAR_public_key: ${{ secrets.PUBLIC_KEY }}
  
  TF_VAR_region: ${{ secrets.AWS_REGION }}
  TF_VAR_vpc_cidr_block: ${{ secrets.VPC_CIDR_BLOCK }}

  TF_VAR_ssh_access_ip: ${{ secrets.SSH_ACCESS_IP }}
  TF_VAR_public_subnet_cidr_block: ${{ secrets.PUBLIC_SUBNET_CIDR_BLOCK }}
  TF_VAR_private_subnet_cidr_block: ${{ secrets.PRIVATE_SUBNET_CIDR_BLOCK }}

  TF_VAR_dbname: ${{ secrets.DBNAME }}
  TF_VAR_dbuser: ${{ secrets.DBUSER }}
  TF_VAR_dbpassword: ${{ secrets.DBPASSWORD }}

jobs:
  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init, Validate & Plan
        run: |
          terraform init
          terraform validate
          terraform plan -out=tfplan

      - name: Upload Plan File
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: tfplan

  deploy:
    name: Terraform Apply (Manual Approval needed)
    needs: plan
    runs-on: ubuntu-latest
    environment: deploy-approval   # ðŸ‘ˆ Requires approval in GitHub UI

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Creds
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Download Plan File
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: .

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan


  destroy:
    if: ${{ inputs.action == 'destroy' }} # This one also works ðŸ‘‰ if: github.event.inputs.action == 'destroy' which is good too
    name: Terraform Destroy Infrastructure
    runs-on: ubuntu-latest
    environment: destroy-approval  # ðŸ‘ˆ requires manual approval in GitHub Environments

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: terraform init -input=false

      - name: Terraform Destroy
        run: terraform destroy -auto-approve

